---
# tasks file for jdk by source

# 检查远程主机上的文件是否存在
# 检查远程主机上的文件是否完整
- name: "Check file exists first: {{install_tmpdir}}/{{jdk_package_name_source}}"
  stat:
      path: "{{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_exists_first

- name: "Check file valid first: {{install_tmpdir}}/{{jdk_package_name_source}}"
  command: "gzip -t {{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_valid_first
  ignore_errors: true
  when: check_file_exists_first.stat.exists

############################################
# 从控制机拷贝
############################################
- name: "Check file exists on ansible host: {{role_path}}/files/{{jdk_package_name_source}}"
  delegate_to: localhost
  run_once: true
  stat:
      path: "{{role_path}}/files/{{jdk_package_name_source}}"
  register: local_file_stat

- name: "cp {{jdk_package_name_source}} {{install_tmpdir}}/"
  become: true
  copy:
      src: "{{jdk_package_name_source}}"
      dest: "{{install_tmpdir}}/"
      owner: "{{jdk_install_user}}"
      group: "{{jdk_install_group}}"
      mode: 0755
  when:
      - (not check_file_exists_first.stat.exists or check_file_valid_first.rc != 0)
      - local_file_stat.stat.exists

#################################################
# 从 jdk_base_url 下载
#################################################

- name: "Check file exists second: {{install_tmpdir}}/{{jdk_package_name_source}}"
  stat:
      path: "{{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_exists_second

- name: "Check file valid second: {{install_tmpdir}}/{{jdk_package_name_source}}"
  command: "gzip -t {{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_valid_second
  ignore_errors: true
  when: check_file_exists_second.stat.exists

- name: "Download file from jdk_base_url: from {{jdk_base_url}}/{{jdk_package_name_source}} to {{install_tmpdir}}/{{jdk_package_name_source}}"
  get_url:
      url: "{{jdk_base_url}}/{{jdk_package_name_source}}"
      dest: "{{install_tmpdir}}/{{jdk_package_name_source}}"
      owner: "{{jdk_install_user}}"
      group: "{{jdk_install_group}}"
      mode: 0755
      timeout: 600
  when:
      - (not check_file_exists_second.stat.exists or check_file_valid_second.rc != 0)
  ignore_errors: true

#################################################
# 尝试从 jdk_base_url_remote 下载
#################################################

- name: "Check file exists third: {{install_tmpdir}}/{{jdk_package_name_source}}"
  stat:
      path: "{{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_exists_third

- name: "Check file valid third: {{install_tmpdir}}/{{jdk_package_name_source}}"
  command: "gzip -t {{install_tmpdir}}/{{jdk_package_name_source}}"
  register: check_file_valid_third
  ignore_errors: true
  when: check_file_exists_third.stat.exists

- name: "Download file from jdk_base_url_remote: from {{jdk_base_url_remote}}/{{jdk_package_name_source}} to {{install_tmpdir}}/{{jdk_package_name_source}}"
  get_url:
      url: "{{jdk_base_url_remote}}/{{jdk_package_name_source}}"
      dest: "{{install_tmpdir}}/{{jdk_package_name_source}}"
      owner: "{{jdk_install_user}}"
      group: "{{jdk_install_group}}"
      mode: 0755
      timeout: 600
  when:
      - (not check_file_exists_third.stat.exists or check_file_valid_third.rc != 0)

#################################################
# 如果部署模式为源码编译，则解压并安装
#################################################
- name: "Extract {{install_tmpdir}}/{{jdk_package_name_source}} to {{jdk_source_dir}}/"
  become: true
  unarchive:
      src: "{{install_tmpdir}}/{{jdk_package_name_source}}"
      dest: "{{jdk_source_dir}}/"
      remote_src: true
      owner: "{{jdk_install_user}}"
      group: "{{jdk_install_group}}"
      extra_opts:
          - --strip-components=1

- name: "cd {{jdk_source_dir}};./configure --prefix={{jdk_base_dir}}"
  become: true
  shell:
      chdir: "{{jdk_source_dir}}"
      cmd: "./configure --prefix={{jdk_base_dir}}"

- name: "cd {{jdk_source_dir}};make -j{{ansible_processor_vcpus}}"
  become: true
  shell:
      chdir: "{{jdk_source_dir}}"
      cmd: "make -j{{ansible_processor_vcpus}}"

- name: "cd {{jdk_source_dir}};make install"
  become: true
  shell:
      chdir: "{{jdk_source_dir}}"
      cmd: make install
